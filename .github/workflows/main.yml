# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  iOS-build:
    # The type of runner that the job will run on
    runs-on:  self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Build iOS project
        run: |
        
            $0
            
            
#             curl --location --request POST 'https://api.github.com/repos/vishuhanda/browserstacknewappium/dispatches' --header 'Accept: application/vnd.github.v3+json' --header 'Authorization: token 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' --header 'Content-Type: application/json' --data-raw '{"event_type": "triggermavenbuild","client_payload":{"abc":"bs://08760d3f8668615030d376a1f755544a4e027df3"}}'        
        
#             echo Making ios build
            
#             xcodebuild -allowProvisioningUpdates
            
#             xcodebuild -project DemoAppiOS.xcodeproj -scheme DemoAppiOS -sdk iphoneos14.4 clean analyze

#             xcodebuild -workspace DemoAppiOS.xcworkspace -scheme DemoAppiOS  -destination generic/platform=iOS build

#             xcodebuild -workspace DemoAppiOS.xcworkspace -scheme DemoAppiOS -sdk iphoneos -configuration AppStoreDistribution archive -archivePath $PWD/build/DemoAppiOS.xcarchive

#             xcodebuild -exportArchive -archivePath $PWD/build/DemoAppiOS.xcarchive -exportOptionsPlist demoAppiOS/info.plist -exportPath $PWD/build
            
#   upload-app-on-browserstack:
#     needs: iOS-build
#     # The type of runner that the job will run on
#     runs-on:  self-hosted

#     steps:
#       - name: upload app on browserstack
#         run: |
#             echo getting iOS build
#             echo uploading app to browserstack
            
#             appPath=$(curl -u "vhvl_9KOMkx:puL2x1SZ4AhecfrcxW39" -X POST "https://api-cloud.browserstack.com/app-automate/upload" -F "file=@build/DemoAppiOS.ipa")

#             echo $appPath

#             browserStackAppPath=$(echo $appPath | jq --raw-output '.app_url')       
            
#             echo $browserStackAppPath > browser-stack-url.txt
            
#       - name: Storing in an artifact
#         uses: actions/upload-artifact@v2
#         with:
#           name: browserstackurl
#           path: browser-stack-url.txt
          
#   run-automation-script:
#     needs: [iOS-build,upload-app-on-browserstack]
#     # The type of runner that the job will run on
#     runs-on:  self-hosted
        
#     steps: 
#       - name: Download browserstack artifact
#         run : |
#             browserstackurl=$(cat browser-stack-url.txt)
#             echo browserstackurl $browserstackurl
#             curl --header "Content-Type:application/json" --header "accept:application/vnd.github.v3+json" --header "Authorization:token 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"  \
#                  --request POST \
#                  --data '{
#                    "event_type": "triggermavenbuild",
#                    "client_payload":{
#                        "abc":"bs://08760d3f8668615030d376a1f755544a4e027df3"
#                    }}' \
#                  https://api.github.com/repos/vishuhanda/browserstacknewappium/dispatches
#        # curl --location --request POST 'https://api.github.com/repos/vishuhanda/browserstacknewappium/dispatches' --header 'Accept: application/vnd.github.v3+json' --header 'Authorization: Bearer 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' --header 'Content-Type: application/json' --data-raw '{"event_type": "triggermavenbuild","client_payload":{"abc":$browserstackurl}}'
